import pefile
import os
import json
from capstone import *
#from hash import hashing
#from exports import Exports
#from imports import imports
#from strings import strings
def assembly(file_name):
   

 #   file_list = os. listdir(folder_path)
    #file_list = os.path.isfile(folder_path)
    #for file in file_list:
    #file_path = os.path.join(folder_path, file)
   pe = pefile.PE(file_name)
    
  #  s = strings(file_path)
    #h = hashing(file_name)
  #  e = Exports(file_path)
  #  i = imports(file_path)
    #    print (file_name)

   with open(file_name + ".json", 'w') as f:
       entrypoint = pe.OPTIONAL_HEADER.AddressOfEntryPoint
       data = pe.get_section_by_rva(entrypoint)

       code_dump = data.get_data()

       code_addr = pe.OPTIONAL_HEADER.ImageBase + data.VirtualAddress

       md = Cs(CS_ARCH_X86, CS_MODE_64)

       for i in md.disasm(code_dump, code_addr):
           print([(i.mnemonic, i.op_str)])
       
       my_dict = {}
       #json.dump ("{Assembly: ", f)
              #print(file)
       for i in md.disasm(code_dump, code_addr):
            my_dict.update({str(i.address): [i.mnemonic, i.op_str]}) 
            #json.dump((i.mnemonic, i.op_str), f)
            #json.dump("} ", f
   return json.dumps(my_dict)     
